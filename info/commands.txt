docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 rabbitmq:3-management




# for RabbitMQ 3.9-rc.1
docker run -it --rm --name rabbitmq -p 5672:5672 -p 15672:15672 -e RABBITMQ_SERVER_ADDITIONAL_ERL_ARGS='-rabbit loopback_users "none"' rabbitmq:3.9-rc-management

psql -U postgres -p 5432 -h localhost -d app < reference_data_tables_backup.sql

pg_restore --verbose --clean --no-acl --no-owner --host localhost --dbname my-destination-database /tmp/db.dump

pg_dump postgresql://postgres:postgres@localhost/app --data-only  --table=public.candidate_types --column-inserts > testing-inserts.sql

pg_dump --column-inserts --data-only --table=<table> <database>
pg_dump postgresql://postgres:postgres@localhost/app --data-only  --table=public.candidate_types --column-inserts > testing-inserts.sql

psql -U postgres -p 5432 -h localhost -d app < reference_data_1.sql      


subprocess.call(['psql --username=openerp --dbname=sf_template --no-password --command="select pg_terminate_backend(procpid) from pg_stat_activity where datname = \'sf_template\' and procpid <> pg_backend_pid()"'], env={'PGPASSWORD': 'mypassword'})
