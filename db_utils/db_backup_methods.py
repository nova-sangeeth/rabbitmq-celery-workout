import time
import os
import subprocess



def backup_postgres_db(host, database_name, port, user, password, dest_file, table_only, schema):
    process = subprocess.Popen(
        [
            "pg_dump",
            # "--data-only",
            # "--exclude-table-data=ab_*",
            # "--table=action_types",
            # "--table=actions",
            # "--table=benefit_types",
            # "--table=candidate_levels",
            # "--table=candidate_types",
            # "--table=contact_types",
            # "--table=country_info",
            # "--table=currencies",
            # "--table=customer_type",
            # "--table=customer_user_types",
            # "--table=display_types",
            # "--table=display_data",
            # "--table=districts",
            # "--table=document_ext",
            # "--table=document_owner",
            # "--table=document_types",
            # "--table=document_type_ext",
            # "--table=gender",
            # "--table=issue_authorities",
            # "--table=issue_authority_candidate_type",
            # "--table=issue_authority_qual",
            # "--table=issue_authority_type",
            # "--table=job_candidate_process",
            # "--table=job_candidate_process_action",
            # "--table=job_candidate_process_actions",
            # "--table=language_proficiency",
            # "--table=languages",
            # "--table=locations",
            # "--table=marital_status",
            # "--table=non_medical_qual_type",
            # "--table=non_medical_qual",
            # "--table=organisation_types",
            # "--table=pqr_header",
            # "--table=pqr_detail",
            # "--table=pqr_ahp_detail",
            # "--table=qualification_classification",
            # "--table=qualifications",
            # "--table=reason_types",
            # "--table=reasons",
            # "--table=recruitment_types",
            # "--table=region_countries",
            # "--table=regions",
            # "--table=role_types",
            # "--table=skill_types",
            # "--table=skills",
            # "--table=special_interest",
            # "--table=speciality",
            # "--table=sub_speciality",
            # "--table=speciality_types",
            # "--table=speciality_sub_speciality_self_reference_types",
            # "--table=speciality_sub_speciality_self_references",
            # "--table=status",
            # "--table=status_types",
            # "--table=speciality_lookup",
            # "--table=keyword_most_frequent_word",
            # "--table=tabs",
            # "--table=team_levels",
            # "--table=titles",
            # "--table=filters",
            # "--table=entities",
            # "--table=departments",
            # "--table=divergents",
            # "--table=customer_admin_types",
            # "--table=job_detail_type",
            # "--table=job_types",
            "--dbname=postgresql://{}:{}@{}:{}/{}".format(user, password, host, port, database_name),
            # "-Fc",
            # "--column-inserts",
            '-n', schema,
            # '-Fc',
            '-f', dest_file,
            '-v'
        ],
        stdout=subprocess.PIPE,
    )
    output = process.communicate()
    return output


backup_postgres_db(
        database_name="app",
        dest_file=f'reference_data_1.sql',
        host='localhost',
        password='postgres',
        port=5432,
        user='postgres',
        table_only=True,
        schema="reference_data"
    )